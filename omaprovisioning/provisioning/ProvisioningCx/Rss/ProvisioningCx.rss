/*
* Copyright (c) 2002 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: 
*     This file contains all the resources for the module ProvisioningHandler.
*
*
*/


//  RESOURCE IDENTIFIER

NAME    PROV

//  INCLUDES

#include <eikon.rh>
#include <avkon.loc>
#include <eikon.rsg>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.mbg>
#include "ProvisioningCx.hrh"
#include <ProvisioningCx.loc>

#include <appinfo.rh>

//  RESOURCE DEFINITIONS 

RESOURCE RSS_SIGNATURE { }

RESOURCE TBUF { buf=qtn_op_conf_cont_title; }

//not_used
RESOURCE EIK_APP_INFO not_used
    {
    menubar = 0;
    cba = 0;
    }

RESOURCE LOCALISABLE_APP_INFO r_provisioningcx_localisable_app_info
    {
    short_caption = qtn_op_conf_cont_title;
    caption_and_icon =
    CAPTION_AND_ICON_INFO
        {
        caption = qtn_op_conf_cont_title;
        #ifdef __SCALABLE_ICONS
            number_of_icons = 1;
           	icon_file = "Z:\\resource\\apps\\ProvisioningCx_aif.mif";
        #else
            number_of_icons = 2;
            icon_file = "Z:\\resource\\apps\\ProvisioningCx_aif.mbm";
        #endif
        };
    }

#ifdef __SERIES60_32__
//----------------------------------------------------
//   
//    r_provisioningcx_softkeys_options_back__contextoptions
//    Provisioning context list view
//
//----------------------------------------------------
//
RESOURCE CBA r_provisioningcx_softkeys_options_back__contextoptions
	{
	buttons	= 
		{
		
		CBA_BUTTON 
		{
			id = EAknSoftkeyOptions; txt = text_softkey_option;
		},
		
		
		CBA_BUTTON 
		{
			id = EAknSoftkeyBack; txt = text_softkey_back;
		},
	
		CBA_BUTTON 
		{
			id = EAknSoftkeyContextOptions; txt = text_softkey_option;
		}
		
		};
	
	}
#endif
//----------------------------------------------------
//   
//    r_provisioningcx_view1
//    Provisioning context list view
//
//----------------------------------------------------
//
RESOURCE AVKON_VIEW r_provisioningcx_view1
    {
    menubar=r_provisioningcx_menubar_view1;  
    #ifdef __SERIES60_32__ 						// KS
    	cba = r_provisioningcx_softkeys_options_back__contextoptions; 
    #else
    	cba=R_AVKON_SOFTKEYS_SELECTION_LIST;
    #endif
    }

//----------------------------------------------------
//   
//    r_provisioningcx_menubar_view1
//    Menu bar for view
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_provisioningcx_menubar_view1
{
    titles=
    {
        MENU_TITLE { menu_pane = r_provisioningcx_app_menu; }
    };
}

//----------------------------------------------------
//   
//    r_provisioningcx_app_menu
//    Menu bar for view
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_provisioningcx_app_menu
{
    items=
    {
        MENU_ITEM { command=EProvisioningCxCmdDeleteContext; txt = qtn_op_opt_delete; },
        MENU_ITEM { command=EAknCmdHelp; txt=qtn_options_help; },
        MENU_ITEM { command=EAknCmdExit; txt=qtn_options_exit; }
    };
}

//----------------------------------------------------
//   
//    r_provisioningcx_context_menubar
//    Menu bar for view
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_provisioningcx_context_menubar
    {
    titles = 
        {
        MENU_TITLE { menu_pane = r_provisioningcx_context_menu; } 
        };
    }
    
//----------------------------------------------------
//   
//    r_provisioningcx_context_menu
//    Menu bar for view
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_provisioningcx_context_menu
{
    items=
    {
        MENU_ITEM { command=EProvisioningCxCmdDeleteContext; txt = qtn_op_opt_delete; }
    };
}

//----------------------------------------------------
//   
//    r_provisioningcx_listbox
//    Context list box
//
//----------------------------------------------------
//
RESOURCE LISTBOX r_provisioningcx_listbox
    {
    flags = EAknListBoxSelectionList;
    }

// ---------------------------------------------------------
//   
//    r_provisioncx_query_delete
//    Confirmation query for deletion
//
// ---------------------------------------------------------
//
RESOURCE DIALOG r_provisioncx_query_delete
    {
    flags = EGeneralQueryFlags;
    #ifdef __SERIES60_32__	// KS
    	buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
    #else
    	buttons = R_AVKON_SOFTKEYS_YES_NO;
    #endif

    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                { 
                layout = EConfirmationLayout;
                };
            }
        };
    }

//----------------------------------------------------
//   
//    r_provisioningcx_empty
//    Text when there are no configuration contexts
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_op_conf_cont_empty
    { 
    buf = qtn_op_conf_cont_empty; 
    }

//----------------------------------------------------
//   
//    r_provisioningcx_delete
//    Text for deletion query
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_op_delete_context
    { 
    buf = qtn_op_delete_context; 
    }

//----------------------------------------------------
//   
//    r_provisioningcx_default_name
//    Text for deletion query
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_op_context_name
    { 
    buf = qtn_op_context_name; 
    }

//----------------------------------------------------
//   
//    r_provisioningcx_default_name2
//    Text for deletion query
//
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_op_context_name2    
    { 
    buf = qtn_op_context_name2; 
    }


// ---------------------------------------------------------
//   
//    r_waitnote_delete
//    Save wait note
//
// ---------------------------------------------------------
//
RESOURCE DIALOG r_waitnote_delete
    {
    flags = EAknProgressNoteFlags;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = 1;
            control = AVKON_NOTE 
                { 
                layout = EProgressLayout;
                singular_label = qtn_fldr_deleting_wait_note;
                };
            }
        };
    }

// ---------------------------------------------------------
//   
//    r_text_qtn_op_del_cont_no
//    Error note when a context is active.
//
// ---------------------------------------------------------
//
RESOURCE TBUF r_text_qtn_op_del_cont_no
    {
    buf=qtn_op_del_cont_no;
    }

// End of File
